############################ IMPORTS ############################
import_from_git(url: 'git@ino.bitbucket.org:inoios/fastlane.git',
               path: 'fastlane/Fastfile')


######################### PRECONDITIONS #########################
default_platform :ios

platform :ios do

  ######################### PUBLIC LANES ##########################

  desc "Submit a new CI-Config build from develop branch (testing flow)"
  lane :archive do |options|

    appName = options[:appName] || $appName
    xcodeproj = options[:xcodeproj] || "./#{appName}.xcodeproj"
    versionNumber = options[:version_number] || get_version_number(xcodeproj: xcodeproj)
    outputDirectory = options[:output_directory] || "archive"

    appIdentifier = options[:app_identifier] || CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    configuration = options[:configuration] || "Release"
    exportMethod = options[:export_method] || "ad-hoc"

    #Building the app file
    ipaPath = buildConfiguration(
      output_directory: outputDirectory,
      configuration: configuration,
      export_method: exportMethod
    )

    UI.message("App archived at path #{ipaPath}\n")

    deployURL = options[:deploy_url] || ENV['DEPLOY_URL']

    plistPath = options[:plist_path] || "./#{appName}/Supporting Files/Info.plist"

    buildNumber = get_info_plist_value(
        path: plistPath,
        key: 'CFBundleVersion'
    )

    adhoc_html_generator(ipa_path: ipaPath,
                         app_identifier: appIdentifier,
                         app_name: appName,
                         build_version: "#{versionNumber}.#{buildNumber}",
                         output_directory: outputDirectory,
                         base_url: deployURL
    )

  end


  desc "Submit a new CI-Config build from develop branch to Fabric (testing flow)"
  lane :testing do |options|

    configuration = options[:configuration] || "Release"
    exportMethod = options[:export_method] || "app-store"

    buildConfiguration(
      configuration: configuration,
      export_method: exportMethod
    )

    fabric()

  end

  desc "Submit a new CI-Config build from development branch to Testflight (stage flow)"
  lane :staging do |options|

    buildConfiguration()

    appleTestflight()

  end

  desc "Run tests"
  lane :build_tests do |options|
    outputDirectory = options[:output_directory] || "build/reports"

    runTests(
      output_directory: outputDirectory
    )

  end


end
